{"version":3,"sources":["images/twitter.png","components/Navigation.js","myFirebase.js","images/google.png","images/github.png","components/AuthFromSocial.js","routes/Auth.js","components/CreateTweet.js","components/Tweet.js","routes/Home.js","components/EditProfile.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["Navigation","signedInUser","resetColor","document","querySelectorAll","forEach","item","style","color","onTargetClick","event","parentEl","target","closest","id","className","onClick","to","icon","faHome","size","src","mainLogo","alt","width","height","faUser","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthFromSocial","onSocialClick","a","name","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","alert","message","Google","Github","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onInputChange","value","onSignInSubmit","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","slice","onSubmit","htmlFor","type","placeholder","onChange","prev","CreateTweet","tweet","setTweet","attachment","setAttachment","onTweetSubmit","attachmentUrl","attachmentRef","ref","uid","uuidv4","uploadString","uploadImg","getDownloadURL","addDoc","collection","text","createdAt","Date","now","creatorId","creatorImg","photoURL","creatorName","displayName","likeUsers","minLength","maxLength","required","faImage","accept","selectedFile","files","reader","FileReader","onloadend","result","readAsDataURL","faPencilAlt","Tweet","tweetObj","isOwner","likedUser","userId","isEditing","setIsEditing","newTweet","setNewTweet","onDeleteClick","OK","window","confirm","deleteDoc","doc","deleteObject","onNewTweetSubmit","updateDoc","onHeartClick","filterUsers","filter","user","createdDate","year","getFullYear","month","getMonth","date","getDate","hours","getHours","minutes","getMinutes","getTweetDate","fillHeart","frameHeart","length","faEdit","faTrashAlt","Home","tweetList","setTweetList","useEffect","tweets","query","orderBy","unsubscribe","onSnapshot","snapshot","tweetArr","docs","map","data","includes","href","title","rel","EditProfile","refreshUser","bioText","myTweets","newPhotoURL","setNewPhotoURL","newDisplayName","setNewDisplayName","userBio","setUserBio","onInputTextChange","onFormSubmit","photoURLRef","updateProfile","currentUser","setDoc","onToggleEditClick","selectedImg","Profile","setMyTweets","setBioText","history","useHistory","userBioText","where","unsubscribeTweet","myTweetArr","signOut","push","Router","isSignedIn","exact","path","App","init","setInit","setIsSignedIn","setSignedInUser","onAuthStateChanged","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7713b1dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter.39708c25.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport 'css/Navigation.css';\nimport mainLogo from 'images/twitter.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ signedInUser }) => {\n  const resetColor = () => {\n    document\n      .querySelectorAll('.link-item')\n      .forEach(item => (item.style.color = '#999'));\n  };\n\n  const onTargetClick = event => {\n    const parentEl = event.target.closest('.Navigation-link');\n    if (parentEl.id === 'link-home') {\n      resetColor();\n      document\n        .querySelectorAll('#home-item')\n        .forEach(item => (item.style.color = '#1da1f2'));\n    }\n    if (parentEl.id === 'link-profile') {\n      resetColor();\n      document\n        .querySelectorAll('#profile-item')\n        .forEach(item => (item.style.color = '#1da1f2'));\n    }\n  };\n\n  return (\n    <div className=\"Navigation\">\n      <ul className=\"Navigation-box\">\n        <li className=\"Navigation-link\" id=\"link-home\" onClick={onTargetClick}>\n          <Link to=\"/\">\n            <FontAwesomeIcon\n              icon={faHome}\n              size=\"lg\"\n              className=\"link-item\"\n              id=\"home-item\"\n            />\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/\">\n            <div className=\"logo-box\">\n              <img\n                className=\"logo\"\n                src={mainLogo}\n                alt=\"Clone twitter\"\n                width=\"40px\"\n                height=\"40px\"\n              />\n            </div>\n          </Link>\n        </li>\n        <li\n          className=\"Navigation-link\"\n          id=\"link-profile\"\n          onClick={onTargetClick}\n        >\n          {signedInUser && (\n            <Link to=\"/profile\">\n              <FontAwesomeIcon\n                icon={faUser}\n                size=\"lg\"\n                className=\"link-item\"\n                id=\"profile-item\"\n              />\n            </Link>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\ninitializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","export default __webpack_public_path__ + \"static/media/google.9db27c10.png\";","export default __webpack_public_path__ + \"static/media/github.44eee0c4.png\";","import React from 'react';\nimport { authService } from 'myFirebase';\nimport {\n  signInWithPopup,\n  GoogleAuthProvider,\n  GithubAuthProvider\n} from '@firebase/auth';\n\nimport 'css/AuthFromSocial.css';\nimport Google from 'images/google.png';\nimport Github from 'images/github.png';\n\nconst AuthFromSocial = () => {\n  const onSocialClick = async event => {\n    let provider;\n\n    try {\n      if (event.target.name === 'google') provider = new GoogleAuthProvider();\n      if (event.target.name === 'github') provider = new GithubAuthProvider();\n      await signInWithPopup(authService, provider);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return (\n    <div className=\"social-account\">\n      <div className=\"social\">\n        <img\n          onClick={onSocialClick}\n          name=\"google\"\n          src={Google}\n          alt=\"Google logo\"\n          aria-label=\"Continue with Google\"\n          width=\"40px\"\n          height=\"40px\"\n        />\n      </div>\n      <div className=\"social\">\n        <img\n          name=\"github\"\n          onClick={onSocialClick}\n          src={Github}\n          alt=\"Github logo\"\n          aria-label=\"Continue with Github\"\n          width=\"40px\"\n          height=\"40px\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AuthFromSocial;\n","import React, { useState } from 'react';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword\n} from '@firebase/auth';\nimport { authService } from 'myFirebase';\nimport AuthFromSocial from 'components/AuthFromSocial';\n\nimport 'css/Auth.css';\nimport mainLogo from 'images/twitter.png';\n\nconst Auth = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onInputChange = event => {\n    if (event.target.name === 'email') setEmail(event.target.value);\n    if (event.target.name === 'password') setPassword(event.target.value);\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  const onSignInSubmit = async event => {\n    event.preventDefault();\n    setEmail('');\n    setPassword('');\n\n    try {\n      if (newAccount)\n        await createUserWithEmailAndPassword(authService, email, password);\n      if (!newAccount)\n        await signInWithEmailAndPassword(authService, email, password);\n    } catch (error) {\n      setError(error.message.slice(10));\n    }\n  };\n\n  return (\n    <div className=\"Auth\">\n      <div className=\"Auth-logo \">\n        <img src={mainLogo} alt=\"Clone Twitter\" width=\"100px\" height=\"100px\" />\n        <h1 className=\"Clone-Twitter\">Clone Twitter</h1>\n      </div>\n\n      <form className=\"form\" onSubmit={onSignInSubmit}>\n        <div className=\"account-form\">\n          <label className=\"label\" htmlFor=\"email\">\n            이메일\n          </label>\n          <input\n            className=\"account-input\"\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email@example.com\"\n            value={email}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"account-form\">\n          <label className=\"label\" htmlFor=\"password\">\n            비밀번호\n          </label>\n          <input\n            className=\"account-input\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"******\"\n            value={password}\n            onChange={onInputChange}\n          />\n        </div>\n        <button className=\"btn btn-account\" type=\"submit\">\n          {newAccount ? '회원가입' : '로그인'}\n        </button>\n      </form>\n      <p className=\"error\">{error}</p>\n      <p className=\"account\" onClick={toggleAccount}>\n        {newAccount ? '로그인' : '회원가입'}\n      </p>\n      <p className=\"label socail-login\">다른 서비스로 로그인</p>\n      <AuthFromSocial />\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { dbService, storageService } from 'myFirebase';\nimport { addDoc, collection } from '@firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from '@firebase/storage';\n\nimport 'css/CreateTweet.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage } from '@fortawesome/free-regular-svg-icons';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst CreateTweet = ({ signedInUser }) => {\n  const [tweet, setTweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onInputChange = event => {\n    setTweet(event.target.value);\n  };\n\n  const onTweetSubmit = async event => {\n    event.preventDefault();\n\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = ref(\n        storageService,\n        `${signedInUser.uid}/${uuidv4()}`\n      );\n      const uploadImg = await uploadString(\n        attachmentRef,\n        attachment,\n        'data_url'\n      );\n      attachmentUrl = await getDownloadURL(uploadImg.ref);\n    }\n\n    await addDoc(collection(dbService, 'tweets'), {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: signedInUser.uid,\n      creatorImg: signedInUser.photoURL,\n      creatorName: signedInUser.displayName,\n      attachmentUrl,\n      likeUsers: []\n    });\n\n    setTweet('');\n    setAttachment('');\n  };\n\n  const onImgClearClick = () => {\n    setAttachment(null);\n  };\n\n  const onFileChange = event => {\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = event => {\n      setAttachment(event.target.result);\n    };\n    reader.readAsDataURL(selectedFile);\n  };\n\n  return (\n    <>\n      <form onSubmit={onTweetSubmit} className=\"tweet-form\">\n        <textarea\n          className=\"tweet-area\"\n          onChange={onInputChange}\n          value={tweet}\n          placeholder=\"무슨 일이 있어나고 있나요?\"\n          minLength=\"1\"\n          maxLength=\"120\"\n          required\n        />\n\n        <div className=\"tweet-file\">\n          <label\n            className=\"input-img-label\"\n            htmlFor=\"tweet-img\"\n            aria-label=\"이미지 업로드\"\n          >\n            <FontAwesomeIcon icon={faImage} size=\"3x\" className=\"input-img\" />\n          </label>\n          <input\n            id=\"tweet-img\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChange}\n          />\n          <button type=\"submit\" className=\"btn-send\">\n            <span className=\"visually-hidden\">발행</span>\n            <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" className=\"submit\" />\n          </button>\n        </div>\n        {attachment && (\n          <div className=\"attachment-box\">\n            <img\n              src={attachment}\n              alt=\"Seleted file\"\n              className=\"attachment-img\"\n            />\n            <button\n              className=\"btn-control btn-cancel\"\n              type=\"button\"\n              onClick={onImgClearClick}\n            >\n              취소\n            </button>\n          </div>\n        )}\n      </form>\n    </>\n  );\n};\n\nexport default CreateTweet;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'myFirebase';\nimport { doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { ref, deleteObject } from 'firebase/storage';\n\nimport 'css/Tweet.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHeart as fillHeart,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  faEdit,\n  faHeart as frameHeart\n} from '@fortawesome/free-regular-svg-icons';\n\nconst Tweet = ({ tweetObj, isOwner, likedUser, userId }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n  const onDeleteClick = async () => {\n    const OK = window.confirm('이 트윗을 삭제하시겠습니까?');\n    if (OK) {\n      await deleteDoc(doc(dbService, `tweets/${tweetObj.id}`));\n    }\n    if (OK && tweetObj.attachmentUrl) {\n      await deleteObject(ref(storageService, tweetObj.attachmentUrl));\n    }\n  };\n\n  const onToggleEditClick = () => setIsEditing(prev => !prev);\n  const onNewTweetClick = event => {\n    setNewTweet(event.target.value);\n  };\n\n  const onNewTweetSubmit = async event => {\n    event.preventDefault();\n    await updateDoc(doc(dbService, `tweets/${tweetObj.id}`), {\n      text: newTweet\n    });\n    setIsEditing(false);\n  };\n\n  const getTweetDate = () => {\n    const createdDate = new Date(tweetObj.createdAt);\n    const year = createdDate.getFullYear();\n    const month = createdDate.getMonth() + 1;\n    const date = createdDate.getDate();\n    const hours = createdDate.getHours();\n    const minutes = createdDate.getMinutes();\n\n    return `${year}.${month}.${date} ${hours}:${minutes}`;\n  };\n\n  // replaceMe:\n  const onHeartClick = async () => {\n    if (likedUser) {\n      const filterUsers = tweetObj.likeUsers.filter(user => user !== userId);\n      await updateDoc(doc(dbService, `tweets/${tweetObj.id}`), {\n        likeUsers: filterUsers\n      });\n    }\n\n    if (!likedUser) {\n      await updateDoc(doc(dbService, `tweets/${tweetObj.id}`), {\n        likeUsers: [...tweetObj.likeUsers, userId]\n      });\n    }\n  };\n\n  return (\n    <div className=\"Tweet\">\n      {isEditing ? (\n        isOwner && (\n          <div className=\"edit-box\">\n            <form className=\"edit-form\" onSubmit={onNewTweetSubmit}>\n              <textarea\n                className=\"edit-textarea\"\n                placeholder=\"내용을 수정하세요.\"\n                required\n                value={newTweet}\n                onChange={onNewTweetClick}\n              />\n              <div className=\"btn-edit-box\">\n                <button className=\"btn-control btn-okay\" type=\"submit\">\n                  확인\n                </button>\n              </div>\n            </form>\n          </div>\n        )\n      ) : (\n        <div className=\"user-tweet\">\n          <div className=\"tweet-content\">\n            <img\n              className=\"Tweet-userImg\"\n              src={tweetObj.creatorImg}\n              alt=\"User\"\n            />\n            <p className=\"Tweet-userName\">{tweetObj.creatorName}</p>\n            <span className=\"tweet-date\">{getTweetDate()}</span>\n          </div>\n          <h4 className=\"tweet-text\">{tweetObj.text}</h4>\n          {tweetObj.attachmentUrl && (\n            <div className=\"selected-img-box\">\n              <img\n                className=\"selected-img\"\n                src={tweetObj.attachmentUrl}\n                alt=\"Selected file\"\n              />\n            </div>\n          )}\n          {tweetObj.likeUsers && (\n            <div className=\"btn--heart__box\">\n              <button onClick={onHeartClick} className=\"btn--heart\">\n                <FontAwesomeIcon\n                  icon={likedUser ? fillHeart : frameHeart}\n                  className=\"heart__icon\"\n                />\n                <span className=\"heart__count\">\n                  {tweetObj.likeUsers?.length}\n                </span>\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n      {!isEditing && isOwner && (\n        <div className=\"btn-box\">\n          <button className=\"btn-edit\" onClick={onToggleEditClick}>\n            <FontAwesomeIcon icon={faEdit} size=\"1x\" className=\"btn-icon\" />\n            <span className=\"visually-hidden\">수정</span>\n          </button>\n          <button className=\"btn-delete\" onClick={onDeleteClick}>\n            <FontAwesomeIcon icon={faTrashAlt} size=\"1x\" className=\"btn-icon\" />\n            <span className=\"visually-hidden\">삭제</span>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import React, { useState, useEffect } from 'react';\nimport { dbService } from 'myFirebase';\nimport { collection, query, onSnapshot, orderBy } from '@firebase/firestore';\nimport CreateTweet from 'components/CreateTweet';\nimport Tweet from 'components/Tweet';\n\nimport 'css/Home.css';\n\nconst Home = ({ signedInUser }) => {\n  const [tweetList, setTweetList] = useState([]);\n\n  useEffect(() => {\n    const tweets = query(\n      collection(dbService, 'tweets'),\n      orderBy('createdAt', 'desc')\n    );\n\n    const unsubscribe = onSnapshot(tweets, snapshot => {\n      const tweetArr = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setTweetList(tweetArr);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <div className=\"Home\">\n      <CreateTweet signedInUser={signedInUser} />\n      <div className=\"TweetList\">\n        {tweetList.map(tweet => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === signedInUser.uid}\n            likedUser={tweet.likeUsers?.includes(signedInUser.uid)}\n            userId={signedInUser.uid}\n          />\n        ))}\n      </div>\n      <footer className=\"footer\">\n        <p>&copy; 2021 CloneTwitter</p>\n        <div className=\"icon__link\">\n          Icons made by{' '}\n          <a\n            className=\"footer--link\"\n            href=\"https://www.freepik.com\"\n            title=\"Freepik\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Freepik{' '}\n          </a>\n          from{' '}\n          <a\n            className=\"footer--link\"\n            href=\"https://www.flaticon.com/\"\n            title=\"Flaticon\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            www.flaticon.com\n          </a>\n          <p>\n            and{' '}\n            <a\n              className=\"footer--link\"\n              href=\"https://fontawesome.com/\"\n              title=\"Font Awesome\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Font Awesome\n            </a>\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { authService, dbService, storageService } from 'myFirebase';\nimport { updateProfile } from '@firebase/auth';\nimport { doc, setDoc, updateDoc } from '@firebase/firestore';\nimport { getDownloadURL, ref, uploadString } from '@firebase/storage';\n\nimport 'css/EditProfile.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage } from '@fortawesome/free-regular-svg-icons';\n\nconst EditProfile = ({ signedInUser, refreshUser, bioText, myTweets }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newPhotoURL, setNewPhotoURL] = useState('');\n  const [newDisplayName, setNewDisplayName] = useState(\n    signedInUser.displayName\n  );\n  const [userBio, setUserBio] = useState(bioText);\n\n  const onImgChange = event => {\n    const selectedImg = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = event => {\n      setNewPhotoURL(event.target.result);\n    };\n    reader.readAsDataURL(selectedImg);\n  };\n\n  const onInputTextChange = event => {\n    if (event.target.name === 'name') setNewDisplayName(event.target.value);\n    if (event.target.name === 'bio') setUserBio(event.target.value);\n  };\n\n  const onFormSubmit = async event => {\n    event.preventDefault();\n\n    let attachmentUrl = '';\n    if (newPhotoURL !== '') {\n      const photoURLRef = ref(storageService, `${signedInUser.uid}`);\n      const uploadImg = await uploadString(\n        photoURLRef,\n        newPhotoURL,\n        'data_url'\n      );\n      attachmentUrl = await getDownloadURL(uploadImg.ref);\n      await updateProfile(authService.currentUser, {\n        photoURL: attachmentUrl\n      });\n      myTweets.map(async tweet => {\n        await updateDoc(doc(dbService, `tweets/${tweet.id}`), {\n          creatorImg: attachmentUrl\n        });\n      });\n      refreshUser();\n\n      setIsEditing(false);\n    }\n\n    if (signedInUser.displayName !== newDisplayName) {\n      await updateProfile(authService.currentUser, {\n        displayName: newDisplayName\n      });\n      refreshUser();\n      setIsEditing(false);\n    }\n\n    if (isEditing) {\n      await setDoc(doc(dbService, 'bio', signedInUser.uid), {\n        text: userBio,\n        creatorId: signedInUser.uid\n      });\n      setIsEditing(false);\n    }\n  };\n\n  const onToggleEditClick = () => {\n    setIsEditing(prev => !prev);\n  };\n\n  return (\n    <>\n      {isEditing && (\n        <div className=\"EditProfile\">\n          <form\n            className=\"edit-form edit-form__profile\"\n            onSubmit={onFormSubmit}\n          >\n            {newPhotoURL && (\n              <div className=\"preview-box\">\n                <img\n                  className=\"preview-userImg\"\n                  src={newPhotoURL}\n                  alt=\"Selected file\"\n                  width=\"100px\"\n                  height=\"100px\"\n                />\n              </div>\n            )}\n\n            <label\n              className=\"input-img-label edit-userImg\"\n              htmlFor=\"Profile-userImg\"\n              aria-label=\"사용자 이미지 업로드\"\n            >\n              <FontAwesomeIcon\n                icon={faImage}\n                size=\"3x\"\n                className=\"input-img edit-userImg-icon\"\n              />\n            </label>\n            <input\n              id=\"Profile-userImg\"\n              type=\"file\"\n              accept=\"image/*\"\n              name=\"userImg\"\n              onChange={onImgChange}\n            />\n\n            <div className=\"edit-content\">\n              <div className=\"input-userName\">\n                <label className=\"label\" htmlFor=\"Profile-userName\">\n                  이름\n                </label>\n                <input\n                  id=\"Profile-userName\"\n                  type=\"text\"\n                  name=\"name\"\n                  required\n                  maxLength={8}\n                  value={newDisplayName}\n                  onChange={onInputTextChange}\n                />\n              </div>\n              <div className=\"input-userBio\">\n                <label className=\"label\" htmlFor=\"Profile-userBio\">\n                  자기소개\n                </label>\n                <input\n                  id=\"Profile-userBio\"\n                  type=\"text\"\n                  name=\"bio\"\n                  value={userBio}\n                  onChange={onInputTextChange}\n                  maxLength={30}\n                />\n              </div>\n            </div>\n            <div className=\"profile-btn-box\">\n              <button className=\"btn-control btn-okay btn-save\" type=\"submit\">\n                저장\n              </button>\n              <button\n                className=\"btn-control btn-cancel\"\n                onClick={onToggleEditClick}\n              >\n                취소\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n      {!isEditing && (\n        <div className=\"btn-edit-profile-box\">\n          <button\n            className=\"btn-control btn-edit-profile\"\n            onClick={onToggleEditClick}\n          >\n            프로필수정\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default EditProfile;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { authService, dbService } from 'myFirebase';\nimport { signOut } from '@firebase/auth';\nimport {\n  collection,\n  doc,\n  onSnapshot,\n  orderBy,\n  query,\n  where\n} from '@firebase/firestore';\nimport EditProfile from 'components/EditProfile';\nimport Tweet from 'components/Tweet';\n\nimport 'css/Home.css';\nimport 'css/Profile.css';\n\nconst Profile = ({ signedInUser, refreshUser }) => {\n  const [myTweets, setMyTweets] = useState([]);\n  const [bioText, setBioText] = useState('');\n\n  const history = useHistory();\n  const onLogoutClick = () => {\n    signOut(authService);\n    history.push('/');\n  };\n\n  useEffect(() => {\n    /* const bioRef = doc(dbService, 'bio', signedInUser.uid);\n    const bioSnap = await getDoc(bioRef);\n    if (bioSnap.exists()) setBioText(bioSnap.data().text); */\n\n    const userBioText = onSnapshot(\n      doc(dbService, 'bio', signedInUser?.uid),\n      doc => setBioText(doc.data().text)\n    );\n\n    const tweets = query(\n      collection(dbService, 'tweets'),\n      where('creatorId', '==', signedInUser?.uid),\n      orderBy('createdAt', 'desc')\n    );\n\n    const unsubscribeTweet = onSnapshot(tweets, snapshot => {\n      const myTweetArr = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setMyTweets(myTweetArr);\n    });\n\n    return () => {\n      userBioText();\n      unsubscribeTweet();\n    };\n  }, [signedInUser?.uid]);\n\n  return (\n    <div className=\"Profile\">\n      <div className=\"Profile-userContent\">\n        <img\n          className=\"Profile-userImg\"\n          src={signedInUser.photoURL}\n          alt={signedInUser.displayName}\n        />\n        <div className=\"Profile-userText\">\n          <p className=\"Profile-userName\">{signedInUser.displayName}</p>\n          <p className=\"Profile-userBio\">{bioText}</p>\n        </div>\n        <button\n          className=\"btn-control btn-signOut\"\n          type=\"submit\"\n          onClick={onLogoutClick}\n        >\n          로그아웃\n        </button>\n      </div>\n      <EditProfile\n        signedInUser={signedInUser}\n        refreshUser={refreshUser}\n        bioText={bioText}\n        myTweets={myTweets}\n      />\n\n      <div className=\"TweetList\">\n        {myTweets.map(tweet => (\n          <Tweet\n            key={`${tweet.creatorId}/${tweet.createdAt}`}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === signedInUser.uid}\n            likedUser={tweet.likeUsers?.includes(signedInUser.uid)}\n            userId={signedInUser.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Navigation from 'components/Navigation';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\n\nconst Router = ({ isSignedIn, signedInUser, refreshUser }) => {\n  return (\n    <>\n      <HashRouter>\n        <Switch>\n          {isSignedIn ? (\n            <>\n              <Navigation signedInUser={signedInUser} />\n              <Route exact path=\"/\">\n                <Home signedInUser={signedInUser} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile\n                  signedInUser={signedInUser}\n                  refreshUser={refreshUser}\n                />\n              </Route>\n            </>\n          ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\n\nexport default Router;\n","import React, { useEffect, useState } from 'react';\nimport Router from 'components/Router';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { authService } from 'myFirebase';\n\nimport 'css/App.css';\nimport mainLogo from 'images/twitter.png';\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [signedInUser, setSignedInUser] = useState(null);\n\n  useEffect(() => {\n    onAuthStateChanged(authService, user => {\n      if (user) {\n        setIsSignedIn(true);\n        setSignedInUser({\n          displayName: user.displayName ? user.displayName : 'Anonymous',\n          uid: user.uid,\n          photoURL: user.photoURL ? user.photoURL : mainLogo\n        });\n      } else {\n        setIsSignedIn(false);\n        setSignedInUser(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n\n    setSignedInUser({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      {init ? (\n        <div className=\"Main\">\n          <Router\n            isSignedIn={isSignedIn}\n            signedInUser={signedInUser}\n            refreshUser={refreshUser}\n          />\n        </div>\n      ) : (\n        <div className=\"init\">\n          <img src={mainLogo} alt=\"logo\" width=\"50px\" height=\"50px\" />\n          <p className=\"init-text\">Initailizing...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}