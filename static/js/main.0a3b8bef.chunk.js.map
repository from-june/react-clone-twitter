{"version":3,"sources":["components/Navigation.js","myFirebase.js","images/google.png","images/github.png","components/AuthFromSocial.js","images/twitter.png","routes/Auth.js","components/CreateTweet.js","components/Tweet.js","routes/Home.js","components/EditProfile.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["Navigation","signedInUser","resetColor","document","querySelectorAll","forEach","item","style","color","onTargetClick","event","parentEl","target","closest","id","className","onClick","to","icon","faHome","size","faUser","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthFromSocial","onSocialClick","a","name","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","alert","message","src","Google","alt","width","height","Github","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onInputChange","value","onSignInSubmit","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","slice","mainLogo","onSubmit","htmlFor","type","placeholder","onChange","prev","CreateTweet","tweet","setTweet","attachment","setAttachment","onTweetSubmit","attachmentUrl","attachmentRef","ref","uid","uuidv4","uploadString","uploadImg","getDownloadURL","addDoc","collection","text","createdAt","Date","now","creatorId","creatorImg","photoURL","creatorName","displayName","maxLength","require","faImage","accept","selectedFile","files","reader","FileReader","onloadend","result","readAsDataURL","faPencilAlt","Tweet","tweetObj","isOwner","isEditing","setIsEditing","newTweet","setNewTweet","onDeleteClick","OK","window","confirm","deleteDoc","doc","deleteObject","onNewTweetSubmit","updateDoc","required","date","getFullYear","getMonth","getDate","getHours","getMinutes","getTweetDate","faEdit","faTrashAlt","Home","tweetList","setTweetList","useEffect","tweets","query","orderBy","unsubscribe","onSnapshot","snapshot","tweetArr","docs","map","data","EditProfile","refreshUser","bioText","newPhotoURL","setNewPhotoURL","newDisplayName","setNewDisplayName","userBio","setUserBio","onInputTextChange","onFormSubmit","photoURLRef","updateProfile","currentUser","onToggleEditClick","selectedImg","Profile","myTweets","setMyTweets","setBioText","history","useHistory","getMyTweets","useCallback","where","myTweetArr","getMyBio","signOut","push","Router","isSignedIn","exact","path","App","init","setInit","setIsSignedIn","setSignedInUser","onAuthStateChanged","user","href","title","rel","ReactDOM","render","getElementById"],"mappings":"4YAsEeA,EA/DI,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACdC,EAAa,WACjBC,SACGC,iBAAiB,cACjBC,SAAQ,SAAAC,GAAI,OAAKA,EAAKC,MAAMC,MAAQ,WAGnCC,EAAgB,SAAAC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,QAAQ,oBAClB,cAAhBF,EAASG,KACXZ,IACAC,SACGC,iBAAiB,cACjBC,SAAQ,SAAAC,GAAI,OAAKA,EAAKC,MAAMC,MAAQ,cAErB,iBAAhBG,EAASG,KACXZ,IACAC,SACGC,iBAAiB,iBACjBC,SAAQ,SAAAC,GAAI,OAAKA,EAAKC,MAAMC,MAAQ,eAI3C,OACE,qBAAKO,UAAU,aAAf,SACE,qBAAIA,UAAU,iBAAd,UACE,oBAAIA,UAAU,kBAAkBD,GAAG,YAAYE,QAASP,EAAxD,SACE,eAAC,IAAD,CAAMQ,GAAG,IAAT,UACE,cAAC,IAAD,CACEC,KAAMC,IACNC,KAAK,KACLL,UAAU,YACVD,GAAG,cACF,IACH,sBAAMC,UAAU,YAAYD,GAAG,YAA/B,yBAKJ,oBACEC,UAAU,kBACVD,GAAG,eACHE,QAASP,EAHX,SAKGR,GACC,eAAC,IAAD,CAAMgB,GAAG,WAAT,UACE,cAAC,IAAD,CACEC,KAAMG,IACND,KAAK,KACLL,UAAU,YACVD,GAAG,iBACF,IACH,sBAAMC,UAAU,YAAYD,GAAG,eAA/B,2C,+DC5CdQ,YAVuB,CACrBC,OAAQC,0CACRC,WAAYD,sCACZE,UAAWF,sBACXG,cAAeH,kCACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAKV,IAAMO,EAAcC,cACdC,EAAYC,cACZC,EAAiBC,cCnBf,G,MAAA,IAA0B,oCCA1B,MAA0B,mCCqD1BC,EAzCQ,WACrB,IAAMC,EAAa,uCAAG,WAAM5B,GAAN,eAAA6B,EAAA,sEAIQ,WAAtB7B,EAAME,OAAO4B,OAAmBC,EAAW,IAAIC,KACzB,WAAtBhC,EAAME,OAAO4B,OAAmBC,EAAW,IAAIE,KALjC,SAMZC,YAAgBb,EAAaU,GANjB,uDAQlBI,MAAM,KAAMC,SARM,yDAAH,sDAYnB,OACE,sBAAK/B,UAAU,iBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBACEC,QAASsB,EACTE,KAAK,SACLO,IAAKC,EACLC,IAAI,cACJ,aAAW,uBACXC,MAAM,OACNC,OAAO,WAGX,qBAAKpC,UAAU,SAAf,SACE,qBACEyB,KAAK,SACLxB,QAASsB,EACTS,IAAKK,EACLH,IAAI,cACJ,aAAW,uBACXC,MAAM,OACNC,OAAO,eC9CF,G,MAAA,IAA0B,qCCyF1BE,EA9EF,WACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAgB,SAAArD,GACM,UAAtBA,EAAME,OAAO4B,MAAkBgB,EAAS9C,EAAME,OAAOoD,OAC/B,aAAtBtD,EAAME,OAAO4B,MAAqBkB,EAAYhD,EAAME,OAAOoD,QAK3DC,EAAc,uCAAG,WAAMvD,GAAN,SAAA6B,EAAA,yDACrB7B,EAAMwD,iBACNV,EAAS,IACTE,EAAY,IAHS,UAMfC,EANe,gCAOXQ,YAA+BpC,EAAawB,EAAOE,GAPxC,UAQdE,EARc,kCASXS,YAA2BrC,EAAawB,EAAOE,GATpC,0DAWnBK,EAAS,KAAMhB,QAAQuB,MAAM,KAXV,0DAAH,sDAepB,OACE,sBAAKtD,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKgC,IAAKuB,EAAUrB,IAAI,gBAAgBC,MAAM,QAAQC,OAAO,UAC7D,oBAAIpC,UAAU,gBAAd,8BAGF,uBAAMA,UAAU,OAAOwD,SAAUN,EAAjC,UACE,sBAAKlD,UAAU,eAAf,UACE,uBAAOA,UAAU,QAAQyD,QAAQ,QAAjC,gCAGA,uBACEzD,UAAU,gBACVD,GAAG,QACH2D,KAAK,QACLjC,KAAK,QACLkC,YAAY,oBACZV,MAAOT,EACPoB,SAAUZ,OAGd,sBAAKhD,UAAU,eAAf,UACE,uBAAOA,UAAU,QAAQyD,QAAQ,WAAjC,sCAGA,uBACEzD,UAAU,gBACVD,GAAG,WACH2D,KAAK,WACLjC,KAAK,WACLkC,YAAY,SACZV,MAAOP,EACPkB,SAAUZ,OAGd,wBAAQhD,UAAU,kBAAkB0D,KAAK,SAAzC,SACGd,EAAa,2BAAS,0BAG3B,mBAAG5C,UAAU,QAAb,SAAsB8C,IACtB,mBAAG9C,UAAU,UAAUC,QA1DL,kBAAM4C,GAAc,SAAAgB,GAAI,OAAKA,MA0D/C,SACGjB,EAAa,qBAAQ,6BAExB,mBAAG5C,UAAU,qBAAb,sEACA,cAAC,EAAD,Q,gDC8BS8D,EAvGK,SAAC,GAAsB,IAApB5E,EAAmB,EAAnBA,aACrB,EAA0BqD,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KACA,EAAoCzB,mBAAS,IAA7C,mBAAO0B,EAAP,KAAmBC,EAAnB,KAMMC,EAAa,uCAAG,WAAMxE,GAAN,mBAAA6B,EAAA,yDACpB7B,EAAMwD,iBAEFiB,EAAgB,GACD,KAAfH,EAJgB,wBAKZI,EAAgBC,YACpBlD,EADuB,UAEpBlC,EAAaqF,IAFO,YAEAC,gBAPP,SASMC,YACtBJ,EACAJ,EACA,YAZgB,cASZS,EATY,gBAcIC,YAAeD,EAAUJ,KAd7B,OAclBF,EAdkB,gCAiBdQ,YAAOC,YAAW3D,EAAW,UAAW,CAC5C4D,KAAMf,EACNgB,UAAWC,KAAKC,MAChBC,UAAWhG,EAAaqF,IACxBY,WAAYjG,EAAakG,SACzBC,YAAanG,EAAaoG,YAC1BlB,kBAvBkB,QA0BpBJ,EAAS,IACTE,EAAc,IA3BM,4CAAH,sDA2CnB,OACE,mCACE,uBAAMV,SAAUW,EAAenE,UAAU,aAAzC,UACE,0BACEA,UAAU,aACV4D,SApDc,SAAAjE,GACpBqE,EAASrE,EAAME,OAAOoD,QAoDhBA,MAAOc,EACPJ,YAAY,sDACZ4B,UAAW,IACXC,QAAQ,SAGV,sBAAKxF,UAAU,aAAf,UACE,uBACEA,UAAU,kBACVyD,QAAQ,YACR,aAAW,wCAHb,SAKE,cAAC,IAAD,CAAiBtD,KAAMsF,IAASpF,KAAK,KAAKL,UAAU,gBAEtD,uBACED,GAAG,YACH2D,KAAK,OACLgC,OAAO,UACP9B,SAjCW,SAAAjE,GACnB,IAAMgG,EAAehG,EAAME,OAAO+F,MAAM,GAClCC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAAApG,GACjBuE,EAAcvE,EAAME,OAAOmG,SAE7BH,EAAOI,cAAcN,SA8BhB1B,GACC,sBAAKjE,UAAU,iBAAf,UACE,qBACEgC,IAAKiC,EACL/B,IAAI,eACJlC,UAAU,mBAEZ,wBACEA,UAAU,yBACV0D,KAAK,SACLzD,QAlDY,WACtBiE,EAAc,OA8CN,6BASJ,yBAAQR,KAAK,SAAS1D,UAAU,WAAhC,UACE,sBAAMA,UAAU,kBAAhB,0BACA,cAAC,IAAD,CAAiBG,KAAM+F,IAAa7F,KAAK,KAAKL,UAAU,oBCHnDmG,G,MA9FD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzB,EAAkC9D,oBAAS,GAA3C,mBAAO+D,EAAP,KAAkBC,EAAlB,KACA,EAAgChE,mBAAS6D,EAAStB,MAAlD,mBAAO0B,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,4BAAAlF,EAAA,2DACdmF,EAAKC,OAAOC,QAAQ,gFADN,gCAGZC,YAAUC,YAAI7F,EAAD,iBAAsBkF,EAASrG,MAHhC,WAKhB4G,IAAMP,EAAShC,cALC,gCAMZ4C,YAAa1C,YAAIlD,EAAgBgF,EAAShC,gBAN9B,2CAAH,qDAeb6C,EAAgB,uCAAG,WAAMtH,GAAN,SAAA6B,EAAA,6DACvB7B,EAAMwD,iBADiB,SAEjB+D,YAAUH,YAAI7F,EAAD,iBAAsBkF,EAASrG,KAAO,CACvD+E,KAAM0B,IAHe,OAKvBD,GAAa,GALU,2CAAH,sDAetB,OACE,sBAAKvG,UAAU,QAAf,UACGsG,EACCD,GACE,qBAAKrG,UAAU,WAAf,SACE,uBAAMA,UAAU,YAAYwD,SAAUyD,EAAtC,UACE,0BACEjH,UAAU,gBACV2D,YAAY,qDACZwD,UAAQ,EACRlE,MAAOuD,EACP5C,SA9BU,SAAAjE,GACtB8G,EAAY9G,EAAME,OAAOoD,UA+Bf,qBAAKjD,UAAU,eAAf,SACE,wBAAQA,UAAU,uBAAuB0D,KAAK,SAA9C,iCAQR,sBAAK1D,UAAU,aAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBACEA,UAAU,gBACVgC,IAAKoE,EAASjB,WACdjD,IAAI,SAEN,mBAAGlC,UAAU,iBAAb,SAA+BoG,EAASf,cACxC,sBAAMrF,UAAU,aAAhB,SArCW,WACnB,IAAMoH,EAAO,IAAIpC,KAAKoB,EAASrB,WAC/B,MAAM,GAAN,OAAUqC,EAAKC,cAAf,YACED,EAAKE,WAAa,EADpB,YAEIF,EAAKG,UAFT,YAEsBH,EAAKI,WAF3B,YAEyCJ,EAAKK,cAiCRC,QAEhC,oBAAI1H,UAAU,aAAd,SAA4BoG,EAAStB,OACpCsB,EAAShC,eACR,qBAAKpE,UAAU,mBAAf,SACE,qBACEA,UAAU,eACVgC,IAAKoE,EAAShC,cACdlC,IAAI,wBAMZoE,GAAaD,GACb,sBAAKrG,UAAU,UAAf,UACE,yBAAQA,UAAU,WAAWC,QAlEX,kBAAMsG,GAAa,SAAA1C,GAAI,OAAKA,MAkE9C,UACE,cAAC,IAAD,CAAiB1D,KAAMwH,IAAQtH,KAAK,KAAKL,UAAU,aACnD,sBAAMA,UAAU,kBAAhB,6BAEF,yBAAQA,UAAU,aAAaC,QAASyG,EAAxC,UACE,cAAC,IAAD,CAAiBvG,KAAMyH,IAAYvH,KAAK,KAAKL,UAAU,aACvD,sBAAMA,UAAU,kBAAhB,qCC1CG6H,G,MA7CF,SAAC,GAAsB,IAApB3I,EAAmB,EAAnBA,aACd,EAAkCqD,mBAAS,IAA3C,mBAAOuF,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,qBAAU,WACR,IAAMC,EAASC,YACbrD,YAAW3D,EAAW,UACtBiH,YAAQ,YAAa,SAGjBC,EAAcC,YAAWJ,GAAQ,SAAAK,GACrC,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAAA1B,GAAG,oBACpChH,GAAIgH,EAAIhH,IACLgH,EAAI2B,WAETX,EAAaQ,MAGf,OAAO,kBAAMH,OACZ,IAGD,sBAAKpI,UAAU,uBAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEA,UAAU,OACVgC,IAAKuB,EACLrB,IAAI,gBACJC,MAAM,OACNC,OAAO,WAGX,cAAC,EAAD,CAAalD,aAAcA,IAC3B,qBAAKc,UAAU,YAAf,SACG8H,EAAUW,KAAI,SAAA1E,GAAK,OAClB,cAAC,EAAD,CAEEqC,SAAUrC,EACVsC,QAAStC,EAAMmB,YAAchG,EAAaqF,KAFrCR,EAAMhE,cC6HR4I,G,MA/JK,SAAC,GAA4C,IAA1CzJ,EAAyC,EAAzCA,aAAc0J,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QAChD,EAAkCtG,oBAAS,GAA3C,mBAAO+D,EAAP,KAAkBC,EAAlB,KACA,EAAsChE,mBAAS,IAA/C,mBAAOuG,EAAP,KAAoBC,EAApB,KACA,EAA4CxG,mBAC1CrD,EAAaoG,aADf,mBAAO0D,EAAP,KAAuBC,EAAvB,KAGA,EAA8B1G,mBAASsG,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAWMC,EAAoB,SAAAzJ,GACE,SAAtBA,EAAME,OAAO4B,MAAiBwH,EAAkBtJ,EAAME,OAAOoD,OACvC,QAAtBtD,EAAME,OAAO4B,MAAgB0H,EAAWxJ,EAAME,OAAOoD,QAGrDoG,EAAY,uCAAG,WAAM1J,GAAN,mBAAA6B,EAAA,yDACnB7B,EAAMwD,iBAEFiB,EAAgB,GACA,KAAhB0E,EAJe,wBAKXQ,EAAchF,YAAIlD,EAAD,UAAoBlC,EAAaqF,MALvC,SAMOE,YACtB6E,EACAR,EACA,YATe,cAMXpE,EANW,gBAWKC,YAAeD,EAAUJ,KAX9B,cAWjBF,EAXiB,iBAYXmF,YAAcvI,EAAYwI,YAAa,CAC3CpE,SAAUhB,IAbK,QAejBwE,IACArC,GAAa,GAhBI,WAmBfrH,EAAaoG,cAAgB0D,EAnBd,kCAoBXO,YAAcvI,EAAYwI,YAAa,CAC3ClE,YAAa0D,IArBE,QAuBjBJ,IACArC,GAAa,GAxBI,YA2BfD,EA3Be,kCA4BXY,YAAUH,YAAI7F,EAAW,MAAOhC,EAAaqF,KAAM,CACvDO,KAAMoE,EACNhE,UAAWhG,EAAaqF,MA9BT,QAiCjBgC,GAAa,GAjCI,4CAAH,sDAqCZkD,EAAoB,WACxBlD,GAAa,SAAA1C,GAAI,OAAKA,MAGxB,OACE,qCACGyC,GACC,qBAAKtG,UAAU,cAAf,SACE,uBACEA,UAAU,+BACVwD,SAAU6F,EAFZ,UAIGP,GACC,qBAAK9I,UAAU,cAAf,SACE,qBACEA,UAAU,kBACVgC,IAAK8G,EACL5G,IAAI,gBACJC,MAAM,QACNC,OAAO,YAKb,uBACEpC,UAAU,+BACVyD,QAAQ,kBACR,aAAW,2DAHb,SAKE,cAAC,IAAD,CACEtD,KAAMsF,IACNpF,KAAK,KACLL,UAAU,kCAGd,uBACED,GAAG,kBACH2D,KAAK,OACLgC,OAAO,UACPjE,KAAK,UACLmC,SA3FQ,SAAAjE,GAClB,IAAM+J,EAAc/J,EAAME,OAAO+F,MAAM,GACjCC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAAApG,GACjBoJ,EAAepJ,EAAME,OAAOmG,SAE9BH,EAAOI,cAAcyD,MAwFb,sBAAK1J,UAAU,eAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,uBAAOA,UAAU,QAAQyD,QAAQ,mBAAjC,0BAGA,uBACE1D,GAAG,mBACH2D,KAAK,OACLjC,KAAK,OACLkC,YAAY,SACZwD,UAAQ,EACR5B,UAAW,EACXtC,MAAO+F,EACPpF,SAAUwF,OAGd,sBAAKpJ,UAAU,gBAAf,UACE,uBAAOA,UAAU,QAAQyD,QAAQ,kBAAjC,sCAGA,uBACEE,YAAY,mFACZ5D,GAAG,kBACH2D,KAAK,OACLjC,KAAK,MACLwB,MAAOiG,EACPtF,SAAUwF,EACV7D,UAAW,WAIjB,sBAAKvF,UAAU,kBAAf,UACE,wBAAQA,UAAU,gCAAgC0D,KAAK,SAAvD,0BAGA,wBACE1D,UAAU,yBACVC,QAASwJ,EAFX,mCAUNnD,GACA,wBACEtG,UAAU,+BACVC,QAASwJ,EAFX,iDCxDOE,G,MApFC,SAAC,GAAmC,IAAjCzK,EAAgC,EAAhCA,aAAc0J,EAAkB,EAAlBA,YAC/B,EAAgCrG,mBAAS,IAAzC,mBAAOqH,EAAP,KAAiBC,EAAjB,KACA,EAA8BtH,mBAAS,IAAvC,mBAAOsG,EAAP,KAAgBiB,EAAhB,KAEMC,EAAUC,cAMVC,EAAcC,sBAAW,sBAAC,8BAAA1I,EAAA,6DACxByG,EAASC,YACbrD,YAAW3D,EAAW,UACtBiJ,YAAM,YAAa,KAAMjL,EAAaqF,KACtC4D,YAAQ,YAAa,SAGjBC,EAAcC,YAAWJ,GAAQ,SAAAK,GACrC,IAAM8B,EAAa9B,EAASE,KAAKC,KAAI,SAAA1B,GAAG,oBACtChH,GAAIgH,EAAIhH,IACLgH,EAAI2B,WAETmB,EAAYO,MAZgB,mBAevB,kBAAMhC,OAfiB,2CAgB7B,CAAClJ,EAAaqF,MAEX8F,EAAWH,sBAAW,sBAAC,4BAAA1I,EAAA,6DACrB4G,EAAcC,YAClBtB,YAAI7F,EAAW,MAAOhC,EAAaqF,MACnC,SAAAwC,GACOA,EAAI2B,QACToB,EAAW/C,EAAI2B,OAAO5D,SALC,mBAQpB,kBAAMsD,OARc,2CAS1B,CAAClJ,EAAaqF,MAOjB,OALAyD,qBAAU,WACRiC,IACAI,MACC,CAACJ,EAAaI,IAGf,sBAAKrK,UAAU,0BAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,qBACEA,UAAU,kBACVgC,IAAK9C,EAAakG,SAClBlD,IAAKhD,EAAaoG,cAEpB,sBAAKtF,UAAU,mBAAf,UACE,mBAAGA,UAAU,mBAAb,SAAiCd,EAAaoG,cAC9C,mBAAGtF,UAAU,kBAAb,SAAgC6I,UAGpC,cAAC,EAAD,CACE3J,aAAcA,EACd0J,YAAaA,EACbC,QAASA,IAGX,qBAAK7I,UAAU,YAAf,SACG4J,EAASnB,KAAI,SAAA1E,GAAK,OACjB,cAAC,EAAD,CAEEqC,SAAUrC,EACVsC,QAAStC,EAAMmB,YAAchG,EAAaqF,KAH5C,UACUR,EAAMmB,UADhB,YAC6BnB,EAAMgB,iBAOvC,wBACE/E,UAAU,0BACV0D,KAAK,SACLzD,QAvEgB,WACpBqK,YAAQtJ,GACR+I,EAAQQ,KAAK,MAkEX,2CCvDSC,EA7BA,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,WAAYvL,EAAgC,EAAhCA,aAAc0J,EAAkB,EAAlBA,YAC1C,OACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,UACG6B,EACC,qCACE,cAAC,EAAD,CAAYvL,aAAcA,IAC1B,cAAC,IAAD,CAAOwL,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMzL,aAAcA,MAEtB,cAAC,IAAD,CAAOwL,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CACEzL,aAAcA,EACd0J,YAAaA,SAKnB,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,aCwDCC,G,MA3EH,WACV,MAAwBrI,oBAAS,GAAjC,mBAAOsI,EAAP,KAAaC,EAAb,KACA,EAAoCvI,oBAAS,GAA7C,mBAAOkI,EAAP,KAAmBM,EAAnB,KACA,EAAwCxI,mBAAS,MAAjD,mBAAOrD,EAAP,KAAqB8L,EAArB,KAEAhD,qBAAU,WACRiD,YAAmBjK,GAAa,SAAAkK,GAC1BA,GACFH,GAAc,GACdC,EAAgB,CACd1F,YAAa4F,EAAK5F,YAAc4F,EAAK5F,YAAc,YACnDf,IAAK2G,EAAK3G,IACVa,SAAU8F,EAAK9F,SAAW8F,EAAK9F,SAAW7B,MAG5CwH,GAAc,GACdC,EAAgB,OAElBF,GAAQ,QAET,IAYH,OACE,sBAAK9K,UAAU,MAAf,UACG6K,EACC,qBAAK7K,UAAU,OAAf,SACE,cAAC,EAAD,CACEyK,WAAYA,EACZvL,aAAcA,EACd0J,YAjBU,WAClB,IAAMsC,EAAOlK,EAAYwI,YAEzBwB,EAAgB,CACd1F,YAAa4F,EAAK5F,YAClBf,IAAK2G,EAAK3G,IACVa,SAAU8F,EAAK9F,gBAeb,sBAAKpF,UAAU,OAAf,UACE,qBAAKgC,IAAKuB,EAAUrB,IAAI,OAAOC,MAAM,OAAOC,OAAO,SACnD,mBAAGpC,UAAU,YAAb,gCAGJ,yBAAQA,UAAU,SAAlB,UACE,uDACA,gDACgB,IACd,oBACEmL,KAAK,0BACLC,MAAM,UACNvL,OAAO,SACPwL,IAAI,aAJN,oBAMU,OARZ,OAUO,IACL,mBACEF,KAAK,4BACLC,MAAM,WACNvL,OAAO,SACPwL,IAAI,aAJN,yCCjEVC,IAASC,OAAO,cAAC,EAAD,IAASnM,SAASoM,eAAe,W","file":"static/js/main.0a3b8bef.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport 'css/Navigation.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ signedInUser }) => {\n  const resetColor = () => {\n    document\n      .querySelectorAll('.link-item')\n      .forEach(item => (item.style.color = '#999'));\n  };\n\n  const onTargetClick = event => {\n    const parentEl = event.target.closest('.Navigation-link');\n    if (parentEl.id === 'link-home') {\n      resetColor();\n      document\n        .querySelectorAll('#home-item')\n        .forEach(item => (item.style.color = '#1da1f2'));\n    }\n    if (parentEl.id === 'link-profile') {\n      resetColor();\n      document\n        .querySelectorAll('#profile-item')\n        .forEach(item => (item.style.color = '#1da1f2'));\n    }\n  };\n\n  return (\n    <div className=\"Navigation\">\n      <ul className=\"Navigation-box\">\n        <li className=\"Navigation-link\" id=\"link-home\" onClick={onTargetClick}>\n          <Link to=\"/\">\n            <FontAwesomeIcon\n              icon={faHome}\n              size=\"2x\"\n              className=\"link-item\"\n              id=\"home-item\"\n            />{' '}\n            <span className=\"link-item\" id=\"home-item\">\n              홈\n            </span>\n          </Link>\n        </li>\n        <li\n          className=\"Navigation-link\"\n          id=\"link-profile\"\n          onClick={onTargetClick}\n        >\n          {signedInUser && (\n            <Link to=\"/profile\">\n              <FontAwesomeIcon\n                icon={faUser}\n                size=\"2x\"\n                className=\"link-item\"\n                id=\"profile-item\"\n              />{' '}\n              <span className=\"link-item\" id=\"profile-item\">\n                프로필\n              </span>\n            </Link>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\ninitializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","export default __webpack_public_path__ + \"static/media/google.9db27c10.png\";","export default __webpack_public_path__ + \"static/media/github.44eee0c4.png\";","import React from 'react';\nimport { authService } from 'myFirebase';\nimport {\n  signInWithPopup,\n  GoogleAuthProvider,\n  GithubAuthProvider\n} from '@firebase/auth';\n\nimport 'css/AuthFromSocial.css';\nimport Google from 'images/google.png';\nimport Github from 'images/github.png';\n\nconst AuthFromSocial = () => {\n  const onSocialClick = async event => {\n    let provider;\n\n    try {\n      if (event.target.name === 'google') provider = new GoogleAuthProvider();\n      if (event.target.name === 'github') provider = new GithubAuthProvider();\n      await signInWithPopup(authService, provider);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return (\n    <div className=\"social-account\">\n      <div className=\"social\">\n        <img\n          onClick={onSocialClick}\n          name=\"google\"\n          src={Google}\n          alt=\"Google logo\"\n          aria-label=\"Continue with Google\"\n          width=\"40px\"\n          height=\"40px\"\n        />\n      </div>\n      <div className=\"social\">\n        <img\n          name=\"github\"\n          onClick={onSocialClick}\n          src={Github}\n          alt=\"Github logo\"\n          aria-label=\"Continue with Github\"\n          width=\"40px\"\n          height=\"40px\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AuthFromSocial;\n","export default __webpack_public_path__ + \"static/media/twitter.39708c25.png\";","import React, { useState } from 'react';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword\n} from '@firebase/auth';\nimport { authService } from 'myFirebase';\nimport AuthFromSocial from 'components/AuthFromSocial';\n\nimport 'css/Auth.css';\nimport mainLogo from 'images/twitter.png';\n\nconst Auth = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onInputChange = event => {\n    if (event.target.name === 'email') setEmail(event.target.value);\n    if (event.target.name === 'password') setPassword(event.target.value);\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  const onSignInSubmit = async event => {\n    event.preventDefault();\n    setEmail('');\n    setPassword('');\n\n    try {\n      if (newAccount)\n        await createUserWithEmailAndPassword(authService, email, password);\n      if (!newAccount)\n        await signInWithEmailAndPassword(authService, email, password);\n    } catch (error) {\n      setError(error.message.slice(10));\n    }\n  };\n\n  return (\n    <div className=\"Auth\">\n      <div className=\"Auth-logo \">\n        <img src={mainLogo} alt=\"Clone Twitter\" width=\"100px\" height=\"100px\" />\n        <h1 className=\"Clone-Twitter\">Clone Twitter</h1>\n      </div>\n\n      <form className=\"form\" onSubmit={onSignInSubmit}>\n        <div className=\"account-form\">\n          <label className=\"label\" htmlFor=\"email\">\n            이메일\n          </label>\n          <input\n            className=\"account-input\"\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email@example.com\"\n            value={email}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"account-form\">\n          <label className=\"label\" htmlFor=\"password\">\n            비밀번호\n          </label>\n          <input\n            className=\"account-input\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"******\"\n            value={password}\n            onChange={onInputChange}\n          />\n        </div>\n        <button className=\"btn btn-account\" type=\"submit\">\n          {newAccount ? '회원가입' : '로그인'}\n        </button>\n      </form>\n      <p className=\"error\">{error}</p>\n      <p className=\"account\" onClick={toggleAccount}>\n        {newAccount ? '로그인' : '회원가입'}\n      </p>\n      <p className=\"label socail-login\">다른 서비스로 로그인</p>\n      <AuthFromSocial />\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { dbService, storageService } from 'myFirebase';\nimport { addDoc, collection } from '@firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from '@firebase/storage';\n\nimport 'css/CreateTweet.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage } from '@fortawesome/free-regular-svg-icons';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst CreateTweet = ({ signedInUser }) => {\n  const [tweet, setTweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onInputChange = event => {\n    setTweet(event.target.value);\n  };\n\n  const onTweetSubmit = async event => {\n    event.preventDefault();\n\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = ref(\n        storageService,\n        `${signedInUser.uid}/${uuidv4()}`\n      );\n      const uploadImg = await uploadString(\n        attachmentRef,\n        attachment,\n        'data_url'\n      );\n      attachmentUrl = await getDownloadURL(uploadImg.ref);\n    }\n\n    await addDoc(collection(dbService, 'tweets'), {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: signedInUser.uid,\n      creatorImg: signedInUser.photoURL,\n      creatorName: signedInUser.displayName,\n      attachmentUrl\n    });\n\n    setTweet('');\n    setAttachment('');\n  };\n\n  const onImgClearClick = () => {\n    setAttachment(null);\n  };\n\n  const onFileChange = event => {\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = event => {\n      setAttachment(event.target.result);\n    };\n    reader.readAsDataURL(selectedFile);\n  };\n\n  return (\n    <>\n      <form onSubmit={onTweetSubmit} className=\"tweet-form\">\n        <textarea\n          className=\"tweet-area\"\n          onChange={onInputChange}\n          value={tweet}\n          placeholder=\"무슨 일이 있었나요?\"\n          maxLength={120}\n          require=\"true\"\n        />\n\n        <div className=\"tweet-file\">\n          <label\n            className=\"input-img-label\"\n            htmlFor=\"tweet-img\"\n            aria-label=\"이미지 업로드\"\n          >\n            <FontAwesomeIcon icon={faImage} size=\"3x\" className=\"input-img\" />\n          </label>\n          <input\n            id=\"tweet-img\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChange}\n          />\n        </div>\n        {attachment && (\n          <div className=\"attachment-box\">\n            <img\n              src={attachment}\n              alt=\"Seleted file\"\n              className=\"attachment-img\"\n            />\n            <button\n              className=\"btn-control btn-cancel\"\n              type=\"button\"\n              onClick={onImgClearClick}\n            >\n              취소\n            </button>\n          </div>\n        )}\n        <button type=\"submit\" className=\"btn-send\">\n          <span className=\"visually-hidden\">발행</span>\n          <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" className=\"submit\" />\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default CreateTweet;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'myFirebase';\nimport { doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { ref, deleteObject } from 'firebase/storage';\n\nimport 'css/Tweet.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-regular-svg-icons';\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n  const onDeleteClick = async () => {\n    const OK = window.confirm('이 트윗을 삭제하시겠습니까?');\n    if (OK) {\n      await deleteDoc(doc(dbService, `tweets/${tweetObj.id}`));\n    }\n    if (OK && tweetObj.attachmentUrl) {\n      await deleteObject(ref(storageService, tweetObj.attachmentUrl));\n    }\n  };\n\n  const onToggleEditClick = () => setIsEditing(prev => !prev);\n  const onNewTweetClick = event => {\n    setNewTweet(event.target.value);\n  };\n\n  const onNewTweetSubmit = async event => {\n    event.preventDefault();\n    await updateDoc(doc(dbService, `tweets/${tweetObj.id}`), {\n      text: newTweet\n    });\n    setIsEditing(false);\n  };\n\n  const getTweetDate = () => {\n    const date = new Date(tweetObj.createdAt);\n    return `${date.getFullYear()}.${\n      date.getMonth() + 1\n    }.${date.getDate()} ${date.getHours()}:${date.getMinutes()}`;\n  };\n\n  return (\n    <div className=\"Tweet\">\n      {isEditing ? (\n        isOwner && (\n          <div className=\"edit-box\">\n            <form className=\"edit-form\" onSubmit={onNewTweetSubmit}>\n              <textarea\n                className=\"edit-textarea\"\n                placeholder=\"내용을 수정하세요.\"\n                required\n                value={newTweet}\n                onChange={onNewTweetClick}\n              />\n              <div className=\"btn-edit-box\">\n                <button className=\"btn-control btn-okay\" type=\"submit\">\n                  확인\n                </button>\n              </div>\n            </form>\n          </div>\n        )\n      ) : (\n        <div className=\"user-tweet\">\n          <div className=\"tweet-content\">\n            <img\n              className=\"Tweet-userImg\"\n              src={tweetObj.creatorImg}\n              alt=\"User\"\n            />\n            <p className=\"Tweet-userName\">{tweetObj.creatorName}</p>\n            <span className=\"tweet-date\">{getTweetDate()}</span>\n          </div>\n          <h4 className=\"tweet-text\">{tweetObj.text}</h4>\n          {tweetObj.attachmentUrl && (\n            <div className=\"selected-img-box\">\n              <img\n                className=\"selected-img\"\n                src={tweetObj.attachmentUrl}\n                alt=\"Selected file\"\n              />\n            </div>\n          )}\n        </div>\n      )}\n      {!isEditing && isOwner && (\n        <div className=\"btn-box\">\n          <button className=\"btn-edit\" onClick={onToggleEditClick}>\n            <FontAwesomeIcon icon={faEdit} size=\"1x\" className=\"btn-icon\" />\n            <span className=\"visually-hidden\">수정</span>\n          </button>\n          <button className=\"btn-delete\" onClick={onDeleteClick}>\n            <FontAwesomeIcon icon={faTrashAlt} size=\"1x\" className=\"btn-icon\" />\n            <span className=\"visually-hidden\">삭제</span>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import React, { useState, useEffect } from 'react';\nimport { dbService } from 'myFirebase';\nimport { collection, query, onSnapshot, orderBy } from '@firebase/firestore';\nimport CreateTweet from 'components/CreateTweet';\nimport Tweet from 'components/Tweet';\n\nimport 'css/Home.css';\nimport mainLogo from 'images/twitter.png';\n\nconst Home = ({ signedInUser }) => {\n  const [tweetList, setTweetList] = useState([]);\n\n  useEffect(() => {\n    const tweets = query(\n      collection(dbService, 'tweets'),\n      orderBy('createdAt', 'desc')\n    );\n\n    const unsubscribe = onSnapshot(tweets, snapshot => {\n      const tweetArr = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setTweetList(tweetArr);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <div className=\"Clone-container Home\">\n      <div className=\"logo-box\">\n        <img\n          className=\"logo\"\n          src={mainLogo}\n          alt=\"Clone twitter\"\n          width=\"40px\"\n          height=\"40px\"\n        />\n      </div>\n      <CreateTweet signedInUser={signedInUser} />\n      <div className=\"TweetList\">\n        {tweetList.map(tweet => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === signedInUser.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { authService, dbService, storageService } from 'myFirebase';\nimport { updateProfile } from '@firebase/auth';\nimport { doc, updateDoc } from '@firebase/firestore';\nimport { getDownloadURL, ref, uploadString } from '@firebase/storage';\n\nimport 'css/EditProfile.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage } from '@fortawesome/free-regular-svg-icons';\n\nconst EditProfile = ({ signedInUser, refreshUser, bioText }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newPhotoURL, setNewPhotoURL] = useState('');\n  const [newDisplayName, setNewDisplayName] = useState(\n    signedInUser.displayName\n  );\n  const [userBio, setUserBio] = useState(bioText);\n\n  const onImgChange = event => {\n    const selectedImg = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = event => {\n      setNewPhotoURL(event.target.result);\n    };\n    reader.readAsDataURL(selectedImg);\n  };\n\n  const onInputTextChange = event => {\n    if (event.target.name === 'name') setNewDisplayName(event.target.value);\n    if (event.target.name === 'bio') setUserBio(event.target.value);\n  };\n\n  const onFormSubmit = async event => {\n    event.preventDefault();\n\n    let attachmentUrl = '';\n    if (newPhotoURL !== '') {\n      const photoURLRef = ref(storageService, `${signedInUser.uid}`);\n      const uploadImg = await uploadString(\n        photoURLRef,\n        newPhotoURL,\n        'data_url'\n      );\n      attachmentUrl = await getDownloadURL(uploadImg.ref);\n      await updateProfile(authService.currentUser, {\n        photoURL: attachmentUrl\n      });\n      refreshUser();\n      setIsEditing(false);\n    }\n\n    if (signedInUser.displayName !== newDisplayName) {\n      await updateProfile(authService.currentUser, {\n        displayName: newDisplayName\n      });\n      refreshUser();\n      setIsEditing(false);\n    }\n\n    if (isEditing) {\n      await updateDoc(doc(dbService, 'bio', signedInUser.uid), {\n        text: userBio,\n        creatorId: signedInUser.uid\n      });\n\n      setIsEditing(false);\n    }\n  };\n\n  const onToggleEditClick = () => {\n    setIsEditing(prev => !prev);\n  };\n\n  return (\n    <>\n      {isEditing && (\n        <div className=\"EditProfile\">\n          <form\n            className=\"edit-form edit-form__profile\"\n            onSubmit={onFormSubmit}\n          >\n            {newPhotoURL && (\n              <div className=\"preview-box\">\n                <img\n                  className=\"preview-userImg\"\n                  src={newPhotoURL}\n                  alt=\"Selected file\"\n                  width=\"100px\"\n                  height=\"100px\"\n                />\n              </div>\n            )}\n\n            <label\n              className=\"input-img-label edit-userImg\"\n              htmlFor=\"Profile-userImg\"\n              aria-label=\"사용자 이미지 업로드\"\n            >\n              <FontAwesomeIcon\n                icon={faImage}\n                size=\"3x\"\n                className=\"input-img edit-userImg-icon\"\n              />\n            </label>\n            <input\n              id=\"Profile-userImg\"\n              type=\"file\"\n              accept=\"image/*\"\n              name=\"userImg\"\n              onChange={onImgChange}\n            />\n\n            <div className=\"edit-content\">\n              <div className=\"input-userName\">\n                <label className=\"label\" htmlFor=\"Profile-userName\">\n                  이름\n                </label>\n                <input\n                  id=\"Profile-userName\"\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"옐\"\n                  required\n                  maxLength={8}\n                  value={newDisplayName}\n                  onChange={onInputTextChange}\n                />\n              </div>\n              <div className=\"input-userBio\">\n                <label className=\"label\" htmlFor=\"Profile-userBio\">\n                  자기소개\n                </label>\n                <input\n                  placeholder=\"노마드코더 클론트위터 챌린지\"\n                  id=\"Profile-userBio\"\n                  type=\"text\"\n                  name=\"bio\"\n                  value={userBio}\n                  onChange={onInputTextChange}\n                  maxLength={30}\n                />\n              </div>\n            </div>\n            <div className=\"profile-btn-box\">\n              <button className=\"btn-control btn-okay btn-save\" type=\"submit\">\n                저장\n              </button>\n              <button\n                className=\"btn-control btn-cancel\"\n                onClick={onToggleEditClick}\n              >\n                취소\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n      {!isEditing && (\n        <button\n          className=\"btn-control btn-edit-profile\"\n          onClick={onToggleEditClick}\n        >\n          프로필수정\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default EditProfile;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router';\nimport { authService, dbService } from 'myFirebase';\nimport { signOut } from '@firebase/auth';\nimport {\n  collection,\n  doc,\n  onSnapshot,\n  orderBy,\n  query,\n  where\n} from '@firebase/firestore';\nimport EditProfile from 'components/EditProfile';\nimport Tweet from 'components/Tweet';\n\nimport 'css/Home.css';\nimport 'css/Profile.css';\n\nconst Profile = ({ signedInUser, refreshUser }) => {\n  const [myTweets, setMyTweets] = useState([]);\n  const [bioText, setBioText] = useState('');\n\n  const history = useHistory();\n  const onLogoutClick = () => {\n    signOut(authService);\n    history.push('/');\n  };\n\n  const getMyTweets = useCallback(async () => {\n    const tweets = query(\n      collection(dbService, 'tweets'),\n      where('creatorId', '==', signedInUser.uid),\n      orderBy('createdAt', 'desc')\n    );\n\n    const unsubscribe = onSnapshot(tweets, snapshot => {\n      const myTweetArr = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setMyTweets(myTweetArr);\n    });\n\n    return () => unsubscribe();\n  }, [signedInUser.uid]);\n\n  const getMyBio = useCallback(async () => {\n    const unsubscribe = onSnapshot(\n      doc(dbService, 'bio', signedInUser.uid),\n      doc => {\n        if (!doc.data()) return;\n        setBioText(doc.data().text);\n      }\n    );\n    return () => unsubscribe();\n  }, [signedInUser.uid]);\n\n  useEffect(() => {\n    getMyTweets();\n    getMyBio();\n  }, [getMyTweets, getMyBio]);\n\n  return (\n    <div className=\"Profile Clone-container\">\n      <div className=\"Profile-userContent\">\n        <img\n          className=\"Profile-userImg\"\n          src={signedInUser.photoURL}\n          alt={signedInUser.displayName}\n        />\n        <div className=\"Profile-userText\">\n          <p className=\"Profile-userName\">{signedInUser.displayName}</p>\n          <p className=\"Profile-userBio\">{bioText}</p>\n        </div>\n      </div>\n      <EditProfile\n        signedInUser={signedInUser}\n        refreshUser={refreshUser}\n        bioText={bioText}\n      />\n\n      <div className=\"TweetList\">\n        {myTweets.map(tweet => (\n          <Tweet\n            key={`${tweet.creatorId}/${tweet.createdAt}`}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === signedInUser.uid}\n          />\n        ))}\n      </div>\n\n      <button\n        className=\"btn-control btn-signOut\"\n        type=\"submit\"\n        onClick={onLogoutClick}\n      >\n        로그아웃\n      </button>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Navigation from 'components/Navigation';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\n\nconst Router = ({ isSignedIn, signedInUser, refreshUser }) => {\n  return (\n    <>\n      <HashRouter>\n        <Switch>\n          {isSignedIn ? (\n            <>\n              <Navigation signedInUser={signedInUser} />\n              <Route exact path=\"/\">\n                <Home signedInUser={signedInUser} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile\n                  signedInUser={signedInUser}\n                  refreshUser={refreshUser}\n                />\n              </Route>\n            </>\n          ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\n\nexport default Router;\n","import React, { useEffect, useState } from 'react';\nimport Router from 'components/Router';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { authService } from 'myFirebase';\n\nimport 'css/App.css';\nimport mainLogo from 'images/twitter.png';\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [signedInUser, setSignedInUser] = useState(null);\n\n  useEffect(() => {\n    onAuthStateChanged(authService, user => {\n      if (user) {\n        setIsSignedIn(true);\n        setSignedInUser({\n          displayName: user.displayName ? user.displayName : 'Anonymous',\n          uid: user.uid,\n          photoURL: user.photoURL ? user.photoURL : mainLogo\n        });\n      } else {\n        setIsSignedIn(false);\n        setSignedInUser(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n\n    setSignedInUser({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      {init ? (\n        <div className=\"Home\">\n          <Router\n            isSignedIn={isSignedIn}\n            signedInUser={signedInUser}\n            refreshUser={refreshUser}\n          />\n        </div>\n      ) : (\n        <div className=\"init\">\n          <img src={mainLogo} alt=\"logo\" width=\"50px\" height=\"50px\" />\n          <p className=\"init-text\">Initailizing...</p>\n        </div>\n      )}\n      <footer className=\"footer\">\n        <p>&copy; 2021 CloneTwitter</p>\n        <div>\n          Icons made by{' '}\n          <a\n            href=\"https://www.freepik.com\"\n            title=\"Freepik\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Freepik{' '}\n          </a>\n          from{' '}\n          <a\n            href=\"https://www.flaticon.com/\"\n            title=\"Flaticon\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            www.flaticon.com\n          </a>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}